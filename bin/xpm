#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var path = require('path')
var Xpm = require('../lib/xpm_client')
var watch = require('../lib/watcher')
var _ = require('underscore')
var fs = require('fs')

program
    .version('0.0.11')
    //.option('-w, --watch ', 'watch the file changed.')
    //.option('-d, --dest <path>', 'dest directory.')

program.on('--help', function(){
    console.log('  Examples:');
    console.log('');
    console.log('    $ xpm run');
    console.log('');
});

program
    .command('run')
    .description('run and render the xpm packages to the given dest directory.')
    .action(function(){
        var cwd = process.cwd()
        if (!fs.existsSync(path.join(cwd, "Xpmfile.js"))) {
            throw new Error('xpm run need file `Xpmfile.js` in your current directory.')
        }
        run(cwd)
    });

program
    .command('*')
    .action(function(env) {
        console.log('unknown command: ' + env)
    })

program.parse(process.argv)

function run(cwd) {
    var config = require(path.join(cwd, "Xpmfile.js"))
    if (!config.dest) {
        throw new Error('[Xpmfile.js] need to config `dest`.')
    }
    var xpm = new Xpm({
        dest: config.dest,
        family: config.family || {},
        production: config.production
    })
    config.add = config.add || []
    config.test = config.test || []
    //add
    xpm.add(config.add)
    //test by mocha
    xpm.test(config.test, config.mochaOpts || {})
    xpm.run(function() {
        if (config.watch) {
            xpm.watch()
        }
    })

}
